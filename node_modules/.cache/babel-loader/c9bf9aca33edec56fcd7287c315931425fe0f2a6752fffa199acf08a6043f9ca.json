{"ast":null,"code":"import { OpenAI as OpenAIClient } from \"openai\";\nimport { GenerationChunk } from \"@langchain/core/outputs\";\nimport { getEnvironmentVariable } from \"@langchain/core/utils/env\";\nimport { LLM } from \"@langchain/core/language_models/llms\";\nimport { getEndpoint } from \"./utils/azure.js\";\nimport { wrapOpenAIClientError } from \"./utils/openai.js\";\n/**\n * @deprecated For legacy compatibility. Use ChatOpenAI instead.\n *\n * Wrapper around OpenAI large language models that use the Chat endpoint.\n *\n * To use you should have the `openai` package installed, with the\n * `OPENAI_API_KEY` environment variable set.\n *\n * To use with Azure you should have the `openai` package installed, with the\n * `AZURE_OPENAI_API_KEY`,\n * `AZURE_OPENAI_API_INSTANCE_NAME`,\n * `AZURE_OPENAI_API_DEPLOYMENT_NAME`\n * and `AZURE_OPENAI_API_VERSION` environment variable set.\n *\n * @remarks\n * Any parameters that are valid to be passed to {@link\n * https://platform.openai.com/docs/api-reference/chat/create |\n * `openai.createCompletion`} can be passed through {@link modelKwargs}, even\n * if not explicitly available on this class.\n *\n * @augments BaseLLM\n * @augments OpenAIInput\n * @augments AzureOpenAIChatInput\n * @example\n * ```typescript\n * const model = new OpenAIChat({\n *   prefixMessages: [\n *     {\n *       role: \"system\",\n *       content: \"You are a helpful assistant that answers in pirate language\",\n *     },\n *   ],\n *   maxTokens: 50,\n * });\n *\n * const res = await model.call(\n *   \"What would be a good company name for a company that makes colorful socks?\"\n * );\n * console.log({ res });\n * ```\n */\nexport class OpenAIChat extends LLM {\n  static lc_name() {\n    return \"OpenAIChat\";\n  }\n  get callKeys() {\n    return [...super.callKeys, \"options\", \"promptIndex\"];\n  }\n  get lc_secrets() {\n    return {\n      openAIApiKey: \"OPENAI_API_KEY\",\n      azureOpenAIApiKey: \"AZURE_OPENAI_API_KEY\",\n      organization: \"OPENAI_ORGANIZATION\"\n    };\n  }\n  get lc_aliases() {\n    return {\n      modelName: \"model\",\n      openAIApiKey: \"openai_api_key\",\n      azureOpenAIApiVersion: \"azure_openai_api_version\",\n      azureOpenAIApiKey: \"azure_openai_api_key\",\n      azureOpenAIApiInstanceName: \"azure_openai_api_instance_name\",\n      azureOpenAIApiDeploymentName: \"azure_openai_api_deployment_name\"\n    };\n  }\n  constructor(fields, /** @deprecated */\n  configuration) {\n    var _fields$openAIApiKey, _fields$azureOpenAIAp, _fields$azureOpenAIAp2, _ref, _fields$azureOpenAIAp3, _fields$azureOpenAIBa, _fields$configuration, _fields$configuration2, _fields$modelName, _fields$prefixMessage, _fields$modelKwargs, _fields$temperature, _fields$topP, _fields$frequencyPena, _fields$presencePenal, _fields$n, _fields$streaming, _configuration$basePa, _fields$configuration3, _configuration$baseOp, _configuration$baseOp2, _fields$configuration4, _configuration$baseOp3, _configuration$baseOp4, _fields$configuration5;\n    super(fields !== null && fields !== void 0 ? fields : {});\n    Object.defineProperty(this, \"lc_serializable\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"temperature\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(this, \"topP\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(this, \"frequencyPenalty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"presencePenalty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"n\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(this, \"logitBias\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"maxTokens\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"modelName\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"gpt-3.5-turbo\"\n    });\n    Object.defineProperty(this, \"prefixMessages\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"modelKwargs\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"timeout\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"stop\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"user\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"streaming\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"openAIApiKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"azureOpenAIApiVersion\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"azureOpenAIApiKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"azureOpenAIApiInstanceName\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"azureOpenAIApiDeploymentName\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"azureOpenAIBasePath\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"organization\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"client\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"clientConfig\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.openAIApiKey = (_fields$openAIApiKey = fields === null || fields === void 0 ? void 0 : fields.openAIApiKey) !== null && _fields$openAIApiKey !== void 0 ? _fields$openAIApiKey : getEnvironmentVariable(\"OPENAI_API_KEY\");\n    this.azureOpenAIApiKey = (_fields$azureOpenAIAp = fields === null || fields === void 0 ? void 0 : fields.azureOpenAIApiKey) !== null && _fields$azureOpenAIAp !== void 0 ? _fields$azureOpenAIAp : getEnvironmentVariable(\"AZURE_OPENAI_API_KEY\");\n    if (!this.azureOpenAIApiKey && !this.openAIApiKey) {\n      throw new Error(\"OpenAI or Azure OpenAI API key not found\");\n    }\n    this.azureOpenAIApiInstanceName = (_fields$azureOpenAIAp2 = fields === null || fields === void 0 ? void 0 : fields.azureOpenAIApiInstanceName) !== null && _fields$azureOpenAIAp2 !== void 0 ? _fields$azureOpenAIAp2 : getEnvironmentVariable(\"AZURE_OPENAI_API_INSTANCE_NAME\");\n    this.azureOpenAIApiDeploymentName = (_ref = (fields === null || fields === void 0 ? void 0 : fields.azureOpenAIApiCompletionsDeploymentName) || (fields === null || fields === void 0 ? void 0 : fields.azureOpenAIApiDeploymentName)) !== null && _ref !== void 0 ? _ref : getEnvironmentVariable(\"AZURE_OPENAI_API_COMPLETIONS_DEPLOYMENT_NAME\") || getEnvironmentVariable(\"AZURE_OPENAI_API_DEPLOYMENT_NAME\");\n    this.azureOpenAIApiVersion = (_fields$azureOpenAIAp3 = fields === null || fields === void 0 ? void 0 : fields.azureOpenAIApiVersion) !== null && _fields$azureOpenAIAp3 !== void 0 ? _fields$azureOpenAIAp3 : getEnvironmentVariable(\"AZURE_OPENAI_API_VERSION\");\n    this.azureOpenAIBasePath = (_fields$azureOpenAIBa = fields === null || fields === void 0 ? void 0 : fields.azureOpenAIBasePath) !== null && _fields$azureOpenAIBa !== void 0 ? _fields$azureOpenAIBa : getEnvironmentVariable(\"AZURE_OPENAI_BASE_PATH\");\n    this.organization = (_fields$configuration = fields === null || fields === void 0 || (_fields$configuration2 = fields.configuration) === null || _fields$configuration2 === void 0 ? void 0 : _fields$configuration2.organization) !== null && _fields$configuration !== void 0 ? _fields$configuration : getEnvironmentVariable(\"OPENAI_ORGANIZATION\");\n    this.modelName = (_fields$modelName = fields === null || fields === void 0 ? void 0 : fields.modelName) !== null && _fields$modelName !== void 0 ? _fields$modelName : this.modelName;\n    this.prefixMessages = (_fields$prefixMessage = fields === null || fields === void 0 ? void 0 : fields.prefixMessages) !== null && _fields$prefixMessage !== void 0 ? _fields$prefixMessage : this.prefixMessages;\n    this.modelKwargs = (_fields$modelKwargs = fields === null || fields === void 0 ? void 0 : fields.modelKwargs) !== null && _fields$modelKwargs !== void 0 ? _fields$modelKwargs : {};\n    this.timeout = fields === null || fields === void 0 ? void 0 : fields.timeout;\n    this.temperature = (_fields$temperature = fields === null || fields === void 0 ? void 0 : fields.temperature) !== null && _fields$temperature !== void 0 ? _fields$temperature : this.temperature;\n    this.topP = (_fields$topP = fields === null || fields === void 0 ? void 0 : fields.topP) !== null && _fields$topP !== void 0 ? _fields$topP : this.topP;\n    this.frequencyPenalty = (_fields$frequencyPena = fields === null || fields === void 0 ? void 0 : fields.frequencyPenalty) !== null && _fields$frequencyPena !== void 0 ? _fields$frequencyPena : this.frequencyPenalty;\n    this.presencePenalty = (_fields$presencePenal = fields === null || fields === void 0 ? void 0 : fields.presencePenalty) !== null && _fields$presencePenal !== void 0 ? _fields$presencePenal : this.presencePenalty;\n    this.n = (_fields$n = fields === null || fields === void 0 ? void 0 : fields.n) !== null && _fields$n !== void 0 ? _fields$n : this.n;\n    this.logitBias = fields === null || fields === void 0 ? void 0 : fields.logitBias;\n    this.maxTokens = fields === null || fields === void 0 ? void 0 : fields.maxTokens;\n    this.stop = fields === null || fields === void 0 ? void 0 : fields.stop;\n    this.user = fields === null || fields === void 0 ? void 0 : fields.user;\n    this.streaming = (_fields$streaming = fields === null || fields === void 0 ? void 0 : fields.streaming) !== null && _fields$streaming !== void 0 ? _fields$streaming : false;\n    if (this.n > 1) {\n      throw new Error(\"Cannot use n > 1 in OpenAIChat LLM. Use ChatOpenAI Chat Model instead.\");\n    }\n    if (this.azureOpenAIApiKey) {\n      var _this$openAIApiKey;\n      if (!this.azureOpenAIApiInstanceName && !this.azureOpenAIBasePath) {\n        throw new Error(\"Azure OpenAI API instance name not found\");\n      }\n      if (!this.azureOpenAIApiDeploymentName) {\n        throw new Error(\"Azure OpenAI API deployment name not found\");\n      }\n      if (!this.azureOpenAIApiVersion) {\n        throw new Error(\"Azure OpenAI API version not found\");\n      }\n      this.openAIApiKey = (_this$openAIApiKey = this.openAIApiKey) !== null && _this$openAIApiKey !== void 0 ? _this$openAIApiKey : \"\";\n    }\n    this.clientConfig = {\n      apiKey: this.openAIApiKey,\n      organization: this.organization,\n      baseURL: (_configuration$basePa = configuration === null || configuration === void 0 ? void 0 : configuration.basePath) !== null && _configuration$basePa !== void 0 ? _configuration$basePa : fields === null || fields === void 0 || (_fields$configuration3 = fields.configuration) === null || _fields$configuration3 === void 0 ? void 0 : _fields$configuration3.basePath,\n      dangerouslyAllowBrowser: true,\n      defaultHeaders: (_configuration$baseOp = configuration === null || configuration === void 0 || (_configuration$baseOp2 = configuration.baseOptions) === null || _configuration$baseOp2 === void 0 ? void 0 : _configuration$baseOp2.headers) !== null && _configuration$baseOp !== void 0 ? _configuration$baseOp : fields === null || fields === void 0 || (_fields$configuration4 = fields.configuration) === null || _fields$configuration4 === void 0 || (_fields$configuration4 = _fields$configuration4.baseOptions) === null || _fields$configuration4 === void 0 ? void 0 : _fields$configuration4.headers,\n      defaultQuery: (_configuration$baseOp3 = configuration === null || configuration === void 0 || (_configuration$baseOp4 = configuration.baseOptions) === null || _configuration$baseOp4 === void 0 ? void 0 : _configuration$baseOp4.params) !== null && _configuration$baseOp3 !== void 0 ? _configuration$baseOp3 : fields === null || fields === void 0 || (_fields$configuration5 = fields.configuration) === null || _fields$configuration5 === void 0 || (_fields$configuration5 = _fields$configuration5.baseOptions) === null || _fields$configuration5 === void 0 ? void 0 : _fields$configuration5.params,\n      ...configuration,\n      ...(fields === null || fields === void 0 ? void 0 : fields.configuration)\n    };\n  }\n  /**\n   * Get the parameters used to invoke the model\n   */\n  invocationParams(options) {\n    var _options$stop;\n    return {\n      model: this.modelName,\n      temperature: this.temperature,\n      top_p: this.topP,\n      frequency_penalty: this.frequencyPenalty,\n      presence_penalty: this.presencePenalty,\n      n: this.n,\n      logit_bias: this.logitBias,\n      max_tokens: this.maxTokens === -1 ? undefined : this.maxTokens,\n      stop: (_options$stop = options === null || options === void 0 ? void 0 : options.stop) !== null && _options$stop !== void 0 ? _options$stop : this.stop,\n      user: this.user,\n      stream: this.streaming,\n      ...this.modelKwargs\n    };\n  }\n  /** @ignore */\n  _identifyingParams() {\n    return {\n      model_name: this.modelName,\n      ...this.invocationParams(),\n      ...this.clientConfig\n    };\n  }\n  /**\n   * Get the identifying parameters for the model\n   */\n  identifyingParams() {\n    return {\n      model_name: this.modelName,\n      ...this.invocationParams(),\n      ...this.clientConfig\n    };\n  }\n  /**\n   * Formats the messages for the OpenAI API.\n   * @param prompt The prompt to be formatted.\n   * @returns Array of formatted messages.\n   */\n  formatMessages(prompt) {\n    const message = {\n      role: \"user\",\n      content: prompt\n    };\n    return this.prefixMessages ? [...this.prefixMessages, message] : [message];\n  }\n  async *_streamResponseChunks(prompt, options, runManager) {\n    var _options$signal;\n    const params = {\n      ...this.invocationParams(options),\n      messages: this.formatMessages(prompt),\n      stream: true\n    };\n    const stream = await this.completionWithRetry(params, options);\n    for await (const data of stream) {\n      var _delta$content, _options$promptIndex, _choice$index, _generationChunk$text;\n      const choice = data === null || data === void 0 ? void 0 : data.choices[0];\n      if (!choice) {\n        continue;\n      }\n      const {\n        delta\n      } = choice;\n      const generationChunk = new GenerationChunk({\n        text: (_delta$content = delta.content) !== null && _delta$content !== void 0 ? _delta$content : \"\"\n      });\n      yield generationChunk;\n      const newTokenIndices = {\n        prompt: (_options$promptIndex = options.promptIndex) !== null && _options$promptIndex !== void 0 ? _options$promptIndex : 0,\n        completion: (_choice$index = choice.index) !== null && _choice$index !== void 0 ? _choice$index : 0\n      };\n      // eslint-disable-next-line no-void\n      void (runManager === null || runManager === void 0 ? void 0 : runManager.handleLLMNewToken((_generationChunk$text = generationChunk.text) !== null && _generationChunk$text !== void 0 ? _generationChunk$text : \"\", newTokenIndices));\n    }\n    if ((_options$signal = options.signal) !== null && _options$signal !== void 0 && _options$signal.aborted) {\n      throw new Error(\"AbortError\");\n    }\n  }\n  /** @ignore */\n  async _call(prompt, options, runManager) {\n    const params = this.invocationParams(options);\n    if (params.stream) {\n      var _finalChunk$text, _finalChunk;\n      const stream = await this._streamResponseChunks(prompt, options, runManager);\n      let finalChunk;\n      for await (const chunk of stream) {\n        if (finalChunk === undefined) {\n          finalChunk = chunk;\n        } else {\n          finalChunk = finalChunk.concat(chunk);\n        }\n      }\n      return (_finalChunk$text = (_finalChunk = finalChunk) === null || _finalChunk === void 0 ? void 0 : _finalChunk.text) !== null && _finalChunk$text !== void 0 ? _finalChunk$text : \"\";\n    } else {\n      var _response$choices$0$m, _response$choices$;\n      const response = await this.completionWithRetry({\n        ...params,\n        stream: false,\n        messages: this.formatMessages(prompt)\n      }, {\n        signal: options.signal,\n        ...options.options\n      });\n      return (_response$choices$0$m = response === null || response === void 0 || (_response$choices$ = response.choices[0]) === null || _response$choices$ === void 0 || (_response$choices$ = _response$choices$.message) === null || _response$choices$ === void 0 ? void 0 : _response$choices$.content) !== null && _response$choices$0$m !== void 0 ? _response$choices$0$m : \"\";\n    }\n  }\n  async completionWithRetry(request, options) {\n    const requestOptions = this._getClientOptions(options);\n    return this.caller.call(async () => {\n      try {\n        const res = await this.client.chat.completions.create(request, requestOptions);\n        return res;\n      } catch (e) {\n        const error = wrapOpenAIClientError(e);\n        throw error;\n      }\n    });\n  }\n  /** @ignore */\n  _getClientOptions(options) {\n    if (!this.client) {\n      const openAIEndpointConfig = {\n        azureOpenAIApiDeploymentName: this.azureOpenAIApiDeploymentName,\n        azureOpenAIApiInstanceName: this.azureOpenAIApiInstanceName,\n        azureOpenAIApiKey: this.azureOpenAIApiKey,\n        azureOpenAIBasePath: this.azureOpenAIBasePath,\n        baseURL: this.clientConfig.baseURL\n      };\n      const endpoint = getEndpoint(openAIEndpointConfig);\n      const params = {\n        ...this.clientConfig,\n        baseURL: endpoint,\n        timeout: this.timeout,\n        maxRetries: 0\n      };\n      if (!params.baseURL) {\n        delete params.baseURL;\n      }\n      this.client = new OpenAIClient(params);\n    }\n    const requestOptions = {\n      ...this.clientConfig,\n      ...options\n    };\n    if (this.azureOpenAIApiKey) {\n      requestOptions.headers = {\n        \"api-key\": this.azureOpenAIApiKey,\n        ...requestOptions.headers\n      };\n      requestOptions.query = {\n        \"api-version\": this.azureOpenAIApiVersion,\n        ...requestOptions.query\n      };\n    }\n    return requestOptions;\n  }\n  _llmType() {\n    return \"openai\";\n  }\n}","map":{"version":3,"names":["OpenAI","OpenAIClient","GenerationChunk","getEnvironmentVariable","LLM","getEndpoint","wrapOpenAIClientError","OpenAIChat","lc_name","callKeys","lc_secrets","openAIApiKey","azureOpenAIApiKey","organization","lc_aliases","modelName","azureOpenAIApiVersion","azureOpenAIApiInstanceName","azureOpenAIApiDeploymentName","constructor","fields","configuration","_fields$openAIApiKey","_fields$azureOpenAIAp","_fields$azureOpenAIAp2","_ref","_fields$azureOpenAIAp3","_fields$azureOpenAIBa","_fields$configuration","_fields$configuration2","_fields$modelName","_fields$prefixMessage","_fields$modelKwargs","_fields$temperature","_fields$topP","_fields$frequencyPena","_fields$presencePenal","_fields$n","_fields$streaming","_configuration$basePa","_fields$configuration3","_configuration$baseOp","_configuration$baseOp2","_fields$configuration4","_configuration$baseOp3","_configuration$baseOp4","_fields$configuration5","Object","defineProperty","enumerable","configurable","writable","value","Error","azureOpenAIApiCompletionsDeploymentName","azureOpenAIBasePath","prefixMessages","modelKwargs","timeout","temperature","topP","frequencyPenalty","presencePenalty","n","logitBias","maxTokens","stop","user","streaming","_this$openAIApiKey","clientConfig","apiKey","baseURL","basePath","dangerouslyAllowBrowser","defaultHeaders","baseOptions","headers","defaultQuery","params","invocationParams","options","_options$stop","model","top_p","frequency_penalty","presence_penalty","logit_bias","max_tokens","undefined","stream","_identifyingParams","model_name","identifyingParams","formatMessages","prompt","message","role","content","_streamResponseChunks","runManager","_options$signal","messages","completionWithRetry","data","_delta$content","_options$promptIndex","_choice$index","_generationChunk$text","choice","choices","delta","generationChunk","text","newTokenIndices","promptIndex","completion","index","handleLLMNewToken","signal","aborted","_call","_finalChunk$text","_finalChunk","finalChunk","chunk","concat","_response$choices$0$m","_response$choices$","response","request","requestOptions","_getClientOptions","caller","call","res","client","chat","completions","create","e","error","openAIEndpointConfig","endpoint","maxRetries","query","_llmType"],"sources":["/Users/mandylin/Desktop/WebCrack React 2/webcrack/node_modules/@langchain/openai/dist/legacy.js"],"sourcesContent":["import { OpenAI as OpenAIClient } from \"openai\";\nimport { GenerationChunk } from \"@langchain/core/outputs\";\nimport { getEnvironmentVariable } from \"@langchain/core/utils/env\";\nimport { LLM } from \"@langchain/core/language_models/llms\";\nimport { getEndpoint } from \"./utils/azure.js\";\nimport { wrapOpenAIClientError } from \"./utils/openai.js\";\n/**\n * @deprecated For legacy compatibility. Use ChatOpenAI instead.\n *\n * Wrapper around OpenAI large language models that use the Chat endpoint.\n *\n * To use you should have the `openai` package installed, with the\n * `OPENAI_API_KEY` environment variable set.\n *\n * To use with Azure you should have the `openai` package installed, with the\n * `AZURE_OPENAI_API_KEY`,\n * `AZURE_OPENAI_API_INSTANCE_NAME`,\n * `AZURE_OPENAI_API_DEPLOYMENT_NAME`\n * and `AZURE_OPENAI_API_VERSION` environment variable set.\n *\n * @remarks\n * Any parameters that are valid to be passed to {@link\n * https://platform.openai.com/docs/api-reference/chat/create |\n * `openai.createCompletion`} can be passed through {@link modelKwargs}, even\n * if not explicitly available on this class.\n *\n * @augments BaseLLM\n * @augments OpenAIInput\n * @augments AzureOpenAIChatInput\n * @example\n * ```typescript\n * const model = new OpenAIChat({\n *   prefixMessages: [\n *     {\n *       role: \"system\",\n *       content: \"You are a helpful assistant that answers in pirate language\",\n *     },\n *   ],\n *   maxTokens: 50,\n * });\n *\n * const res = await model.call(\n *   \"What would be a good company name for a company that makes colorful socks?\"\n * );\n * console.log({ res });\n * ```\n */\nexport class OpenAIChat extends LLM {\n    static lc_name() {\n        return \"OpenAIChat\";\n    }\n    get callKeys() {\n        return [...super.callKeys, \"options\", \"promptIndex\"];\n    }\n    get lc_secrets() {\n        return {\n            openAIApiKey: \"OPENAI_API_KEY\",\n            azureOpenAIApiKey: \"AZURE_OPENAI_API_KEY\",\n            organization: \"OPENAI_ORGANIZATION\",\n        };\n    }\n    get lc_aliases() {\n        return {\n            modelName: \"model\",\n            openAIApiKey: \"openai_api_key\",\n            azureOpenAIApiVersion: \"azure_openai_api_version\",\n            azureOpenAIApiKey: \"azure_openai_api_key\",\n            azureOpenAIApiInstanceName: \"azure_openai_api_instance_name\",\n            azureOpenAIApiDeploymentName: \"azure_openai_api_deployment_name\",\n        };\n    }\n    constructor(fields, \n    /** @deprecated */\n    configuration) {\n        super(fields ?? {});\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"temperature\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        Object.defineProperty(this, \"topP\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        Object.defineProperty(this, \"frequencyPenalty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"presencePenalty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"n\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        Object.defineProperty(this, \"logitBias\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxTokens\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"modelName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"gpt-3.5-turbo\"\n        });\n        Object.defineProperty(this, \"prefixMessages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"modelKwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"timeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stop\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"user\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"streaming\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"openAIApiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIApiVersion\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIApiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIApiInstanceName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIApiDeploymentName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIBasePath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"organization\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"clientConfig\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.openAIApiKey =\n            fields?.openAIApiKey ?? getEnvironmentVariable(\"OPENAI_API_KEY\");\n        this.azureOpenAIApiKey =\n            fields?.azureOpenAIApiKey ??\n                getEnvironmentVariable(\"AZURE_OPENAI_API_KEY\");\n        if (!this.azureOpenAIApiKey && !this.openAIApiKey) {\n            throw new Error(\"OpenAI or Azure OpenAI API key not found\");\n        }\n        this.azureOpenAIApiInstanceName =\n            fields?.azureOpenAIApiInstanceName ??\n                getEnvironmentVariable(\"AZURE_OPENAI_API_INSTANCE_NAME\");\n        this.azureOpenAIApiDeploymentName =\n            (fields?.azureOpenAIApiCompletionsDeploymentName ||\n                fields?.azureOpenAIApiDeploymentName) ??\n                (getEnvironmentVariable(\"AZURE_OPENAI_API_COMPLETIONS_DEPLOYMENT_NAME\") ||\n                    getEnvironmentVariable(\"AZURE_OPENAI_API_DEPLOYMENT_NAME\"));\n        this.azureOpenAIApiVersion =\n            fields?.azureOpenAIApiVersion ??\n                getEnvironmentVariable(\"AZURE_OPENAI_API_VERSION\");\n        this.azureOpenAIBasePath =\n            fields?.azureOpenAIBasePath ??\n                getEnvironmentVariable(\"AZURE_OPENAI_BASE_PATH\");\n        this.organization =\n            fields?.configuration?.organization ??\n                getEnvironmentVariable(\"OPENAI_ORGANIZATION\");\n        this.modelName = fields?.modelName ?? this.modelName;\n        this.prefixMessages = fields?.prefixMessages ?? this.prefixMessages;\n        this.modelKwargs = fields?.modelKwargs ?? {};\n        this.timeout = fields?.timeout;\n        this.temperature = fields?.temperature ?? this.temperature;\n        this.topP = fields?.topP ?? this.topP;\n        this.frequencyPenalty = fields?.frequencyPenalty ?? this.frequencyPenalty;\n        this.presencePenalty = fields?.presencePenalty ?? this.presencePenalty;\n        this.n = fields?.n ?? this.n;\n        this.logitBias = fields?.logitBias;\n        this.maxTokens = fields?.maxTokens;\n        this.stop = fields?.stop;\n        this.user = fields?.user;\n        this.streaming = fields?.streaming ?? false;\n        if (this.n > 1) {\n            throw new Error(\"Cannot use n > 1 in OpenAIChat LLM. Use ChatOpenAI Chat Model instead.\");\n        }\n        if (this.azureOpenAIApiKey) {\n            if (!this.azureOpenAIApiInstanceName && !this.azureOpenAIBasePath) {\n                throw new Error(\"Azure OpenAI API instance name not found\");\n            }\n            if (!this.azureOpenAIApiDeploymentName) {\n                throw new Error(\"Azure OpenAI API deployment name not found\");\n            }\n            if (!this.azureOpenAIApiVersion) {\n                throw new Error(\"Azure OpenAI API version not found\");\n            }\n            this.openAIApiKey = this.openAIApiKey ?? \"\";\n        }\n        this.clientConfig = {\n            apiKey: this.openAIApiKey,\n            organization: this.organization,\n            baseURL: configuration?.basePath ?? fields?.configuration?.basePath,\n            dangerouslyAllowBrowser: true,\n            defaultHeaders: configuration?.baseOptions?.headers ??\n                fields?.configuration?.baseOptions?.headers,\n            defaultQuery: configuration?.baseOptions?.params ??\n                fields?.configuration?.baseOptions?.params,\n            ...configuration,\n            ...fields?.configuration,\n        };\n    }\n    /**\n     * Get the parameters used to invoke the model\n     */\n    invocationParams(options) {\n        return {\n            model: this.modelName,\n            temperature: this.temperature,\n            top_p: this.topP,\n            frequency_penalty: this.frequencyPenalty,\n            presence_penalty: this.presencePenalty,\n            n: this.n,\n            logit_bias: this.logitBias,\n            max_tokens: this.maxTokens === -1 ? undefined : this.maxTokens,\n            stop: options?.stop ?? this.stop,\n            user: this.user,\n            stream: this.streaming,\n            ...this.modelKwargs,\n        };\n    }\n    /** @ignore */\n    _identifyingParams() {\n        return {\n            model_name: this.modelName,\n            ...this.invocationParams(),\n            ...this.clientConfig,\n        };\n    }\n    /**\n     * Get the identifying parameters for the model\n     */\n    identifyingParams() {\n        return {\n            model_name: this.modelName,\n            ...this.invocationParams(),\n            ...this.clientConfig,\n        };\n    }\n    /**\n     * Formats the messages for the OpenAI API.\n     * @param prompt The prompt to be formatted.\n     * @returns Array of formatted messages.\n     */\n    formatMessages(prompt) {\n        const message = {\n            role: \"user\",\n            content: prompt,\n        };\n        return this.prefixMessages ? [...this.prefixMessages, message] : [message];\n    }\n    async *_streamResponseChunks(prompt, options, runManager) {\n        const params = {\n            ...this.invocationParams(options),\n            messages: this.formatMessages(prompt),\n            stream: true,\n        };\n        const stream = await this.completionWithRetry(params, options);\n        for await (const data of stream) {\n            const choice = data?.choices[0];\n            if (!choice) {\n                continue;\n            }\n            const { delta } = choice;\n            const generationChunk = new GenerationChunk({\n                text: delta.content ?? \"\",\n            });\n            yield generationChunk;\n            const newTokenIndices = {\n                prompt: options.promptIndex ?? 0,\n                completion: choice.index ?? 0,\n            };\n            // eslint-disable-next-line no-void\n            void runManager?.handleLLMNewToken(generationChunk.text ?? \"\", newTokenIndices);\n        }\n        if (options.signal?.aborted) {\n            throw new Error(\"AbortError\");\n        }\n    }\n    /** @ignore */\n    async _call(prompt, options, runManager) {\n        const params = this.invocationParams(options);\n        if (params.stream) {\n            const stream = await this._streamResponseChunks(prompt, options, runManager);\n            let finalChunk;\n            for await (const chunk of stream) {\n                if (finalChunk === undefined) {\n                    finalChunk = chunk;\n                }\n                else {\n                    finalChunk = finalChunk.concat(chunk);\n                }\n            }\n            return finalChunk?.text ?? \"\";\n        }\n        else {\n            const response = await this.completionWithRetry({\n                ...params,\n                stream: false,\n                messages: this.formatMessages(prompt),\n            }, {\n                signal: options.signal,\n                ...options.options,\n            });\n            return response?.choices[0]?.message?.content ?? \"\";\n        }\n    }\n    async completionWithRetry(request, options) {\n        const requestOptions = this._getClientOptions(options);\n        return this.caller.call(async () => {\n            try {\n                const res = await this.client.chat.completions.create(request, requestOptions);\n                return res;\n            }\n            catch (e) {\n                const error = wrapOpenAIClientError(e);\n                throw error;\n            }\n        });\n    }\n    /** @ignore */\n    _getClientOptions(options) {\n        if (!this.client) {\n            const openAIEndpointConfig = {\n                azureOpenAIApiDeploymentName: this.azureOpenAIApiDeploymentName,\n                azureOpenAIApiInstanceName: this.azureOpenAIApiInstanceName,\n                azureOpenAIApiKey: this.azureOpenAIApiKey,\n                azureOpenAIBasePath: this.azureOpenAIBasePath,\n                baseURL: this.clientConfig.baseURL,\n            };\n            const endpoint = getEndpoint(openAIEndpointConfig);\n            const params = {\n                ...this.clientConfig,\n                baseURL: endpoint,\n                timeout: this.timeout,\n                maxRetries: 0,\n            };\n            if (!params.baseURL) {\n                delete params.baseURL;\n            }\n            this.client = new OpenAIClient(params);\n        }\n        const requestOptions = {\n            ...this.clientConfig,\n            ...options,\n        };\n        if (this.azureOpenAIApiKey) {\n            requestOptions.headers = {\n                \"api-key\": this.azureOpenAIApiKey,\n                ...requestOptions.headers,\n            };\n            requestOptions.query = {\n                \"api-version\": this.azureOpenAIApiVersion,\n                ...requestOptions.query,\n            };\n        }\n        return requestOptions;\n    }\n    _llmType() {\n        return \"openai\";\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}