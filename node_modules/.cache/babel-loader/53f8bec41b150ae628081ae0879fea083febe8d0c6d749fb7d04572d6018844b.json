{"ast":null,"code":"import { zodToJsonSchema } from \"zod-to-json-schema\";\n/**\n * Formats a `StructuredTool` instance into a format that is compatible\n * with OpenAI function calling. It uses the `zodToJsonSchema`\n * function to convert the schema of the `StructuredTool` into a JSON\n * schema, which is then used as the parameters for the OpenAI function.\n */\nexport function convertToOpenAIFunction(tool) {\n  return {\n    name: tool.name,\n    description: tool.description,\n    parameters: zodToJsonSchema(tool.schema)\n  };\n}\n/**\n * Formats a `StructuredTool` instance into a format that is compatible\n * with OpenAI tool calling. It uses the `zodToJsonSchema`\n * function to convert the schema of the `StructuredTool` into a JSON\n * schema, which is then used as the parameters for the OpenAI tool.\n */\nexport function convertToOpenAITool(tool) {\n  return {\n    type: \"function\",\n    function: convertToOpenAIFunction(tool)\n  };\n}","map":{"version":3,"names":["zodToJsonSchema","convertToOpenAIFunction","tool","name","description","parameters","schema","convertToOpenAITool","type","function"],"sources":["/Users/mandylin/Desktop/WebCrack React 2/webcrack/node_modules/@langchain/core/dist/utils/function_calling.js"],"sourcesContent":["import { zodToJsonSchema } from \"zod-to-json-schema\";\n/**\n * Formats a `StructuredTool` instance into a format that is compatible\n * with OpenAI function calling. It uses the `zodToJsonSchema`\n * function to convert the schema of the `StructuredTool` into a JSON\n * schema, which is then used as the parameters for the OpenAI function.\n */\nexport function convertToOpenAIFunction(tool) {\n    return {\n        name: tool.name,\n        description: tool.description,\n        parameters: zodToJsonSchema(tool.schema),\n    };\n}\n/**\n * Formats a `StructuredTool` instance into a format that is compatible\n * with OpenAI tool calling. It uses the `zodToJsonSchema`\n * function to convert the schema of the `StructuredTool` into a JSON\n * schema, which is then used as the parameters for the OpenAI tool.\n */\nexport function convertToOpenAITool(tool) {\n    return {\n        type: \"function\",\n        function: convertToOpenAIFunction(tool),\n    };\n}\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,oBAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,uBAAuBA,CAACC,IAAI,EAAE;EAC1C,OAAO;IACHC,IAAI,EAAED,IAAI,CAACC,IAAI;IACfC,WAAW,EAAEF,IAAI,CAACE,WAAW;IAC7BC,UAAU,EAAEL,eAAe,CAACE,IAAI,CAACI,MAAM;EAC3C,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,mBAAmBA,CAACL,IAAI,EAAE;EACtC,OAAO;IACHM,IAAI,EAAE,UAAU;IAChBC,QAAQ,EAAER,uBAAuB,CAACC,IAAI;EAC1C,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}