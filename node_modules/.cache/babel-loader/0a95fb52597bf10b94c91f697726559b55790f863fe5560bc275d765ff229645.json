{"ast":null,"code":"import * as uuid from \"uuid\";\nimport { Serializable, get_lc_unique_name } from \"../load/serializable.js\";\n/**\n * Abstract class that provides a set of optional methods that can be\n * overridden in derived classes to handle various events during the\n * execution of a LangChain application.\n */\nclass BaseCallbackHandlerMethodsClass {}\n/**\n * Abstract base class for creating callback handlers in the LangChain\n * framework. It provides a set of optional methods that can be overridden\n * in derived classes to handle various events during the execution of a\n * LangChain application.\n */\nexport class BaseCallbackHandler extends BaseCallbackHandlerMethodsClass {\n  get lc_namespace() {\n    return [\"langchain_core\", \"callbacks\", this.name];\n  }\n  get lc_secrets() {\n    return undefined;\n  }\n  get lc_attributes() {\n    return undefined;\n  }\n  get lc_aliases() {\n    return undefined;\n  }\n  /**\n   * The name of the serializable. Override to provide an alias or\n   * to preserve the serialized module name in minified environments.\n   *\n   * Implemented as a static method to support loading logic.\n   */\n  static lc_name() {\n    return this.name;\n  }\n  /**\n   * The final serialized identifier for the module.\n   */\n  get lc_id() {\n    return [...this.lc_namespace, get_lc_unique_name(this.constructor)];\n  }\n  constructor(input) {\n    super();\n    Object.defineProperty(this, \"lc_serializable\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"lc_kwargs\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"ignoreLLM\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"ignoreChain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"ignoreAgent\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"ignoreRetriever\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"awaitHandlers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: typeof process !== \"undefined\" ?\n      // eslint-disable-next-line no-process-env\n      process.env?.LANGCHAIN_CALLBACKS_BACKGROUND !== \"true\" : true\n    });\n    this.lc_kwargs = input || {};\n    if (input) {\n      this.ignoreLLM = input.ignoreLLM ?? this.ignoreLLM;\n      this.ignoreChain = input.ignoreChain ?? this.ignoreChain;\n      this.ignoreAgent = input.ignoreAgent ?? this.ignoreAgent;\n      this.ignoreRetriever = input.ignoreRetriever ?? this.ignoreRetriever;\n    }\n  }\n  copy() {\n    return new this.constructor(this);\n  }\n  toJSON() {\n    return Serializable.prototype.toJSON.call(this);\n  }\n  toJSONNotImplemented() {\n    return Serializable.prototype.toJSONNotImplemented.call(this);\n  }\n  static fromMethods(methods) {\n    class Handler extends BaseCallbackHandler {\n      constructor() {\n        super();\n        Object.defineProperty(this, \"name\", {\n          enumerable: true,\n          configurable: true,\n          writable: true,\n          value: uuid.v4()\n        });\n        Object.assign(this, methods);\n      }\n    }\n    return new Handler();\n  }\n}","map":{"version":3,"names":["uuid","Serializable","get_lc_unique_name","BaseCallbackHandlerMethodsClass","BaseCallbackHandler","lc_namespace","name","lc_secrets","undefined","lc_attributes","lc_aliases","lc_name","lc_id","constructor","input","Object","defineProperty","enumerable","configurable","writable","value","process","env","LANGCHAIN_CALLBACKS_BACKGROUND","lc_kwargs","ignoreLLM","ignoreChain","ignoreAgent","ignoreRetriever","copy","toJSON","prototype","call","toJSONNotImplemented","fromMethods","methods","Handler","v4","assign"],"sources":["/Users/mandylin/Desktop/WebCrack React/webcrack/node_modules/@langchain/core/dist/callbacks/base.js"],"sourcesContent":["import * as uuid from \"uuid\";\nimport { Serializable, get_lc_unique_name, } from \"../load/serializable.js\";\n/**\n * Abstract class that provides a set of optional methods that can be\n * overridden in derived classes to handle various events during the\n * execution of a LangChain application.\n */\nclass BaseCallbackHandlerMethodsClass {\n}\n/**\n * Abstract base class for creating callback handlers in the LangChain\n * framework. It provides a set of optional methods that can be overridden\n * in derived classes to handle various events during the execution of a\n * LangChain application.\n */\nexport class BaseCallbackHandler extends BaseCallbackHandlerMethodsClass {\n    get lc_namespace() {\n        return [\"langchain_core\", \"callbacks\", this.name];\n    }\n    get lc_secrets() {\n        return undefined;\n    }\n    get lc_attributes() {\n        return undefined;\n    }\n    get lc_aliases() {\n        return undefined;\n    }\n    /**\n     * The name of the serializable. Override to provide an alias or\n     * to preserve the serialized module name in minified environments.\n     *\n     * Implemented as a static method to support loading logic.\n     */\n    static lc_name() {\n        return this.name;\n    }\n    /**\n     * The final serialized identifier for the module.\n     */\n    get lc_id() {\n        return [\n            ...this.lc_namespace,\n            get_lc_unique_name(this.constructor),\n        ];\n    }\n    constructor(input) {\n        super();\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ignoreLLM\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreAgent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreRetriever\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"awaitHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: typeof process !== \"undefined\"\n                ? // eslint-disable-next-line no-process-env\n                    process.env?.LANGCHAIN_CALLBACKS_BACKGROUND !== \"true\"\n                : true\n        });\n        this.lc_kwargs = input || {};\n        if (input) {\n            this.ignoreLLM = input.ignoreLLM ?? this.ignoreLLM;\n            this.ignoreChain = input.ignoreChain ?? this.ignoreChain;\n            this.ignoreAgent = input.ignoreAgent ?? this.ignoreAgent;\n            this.ignoreRetriever = input.ignoreRetriever ?? this.ignoreRetriever;\n        }\n    }\n    copy() {\n        return new this.constructor(this);\n    }\n    toJSON() {\n        return Serializable.prototype.toJSON.call(this);\n    }\n    toJSONNotImplemented() {\n        return Serializable.prototype.toJSONNotImplemented.call(this);\n    }\n    static fromMethods(methods) {\n        class Handler extends BaseCallbackHandler {\n            constructor() {\n                super();\n                Object.defineProperty(this, \"name\", {\n                    enumerable: true,\n                    configurable: true,\n                    writable: true,\n                    value: uuid.v4()\n                });\n                Object.assign(this, methods);\n            }\n        }\n        return new Handler();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}