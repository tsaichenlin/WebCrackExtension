{"ast":null,"code":"import { ZodFirstPartyTypeKind } from \"zod\";\nimport { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseArrayDef(def, refs) {\n  var _def$type;\n  const res = {\n    type: \"array\"\n  };\n  if (((_def$type = def.type) === null || _def$type === void 0 || (_def$type = _def$type._def) === null || _def$type === void 0 ? void 0 : _def$type.typeName) !== ZodFirstPartyTypeKind.ZodAny) {\n    res.items = parseDef(def.type._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, \"items\"]\n    });\n  }\n  if (def.minLength) {\n    setResponseValueAndErrors(res, \"minItems\", def.minLength.value, def.minLength.message, refs);\n  }\n  if (def.maxLength) {\n    setResponseValueAndErrors(res, \"maxItems\", def.maxLength.value, def.maxLength.message, refs);\n  }\n  if (def.exactLength) {\n    setResponseValueAndErrors(res, \"minItems\", def.exactLength.value, def.exactLength.message, refs);\n    setResponseValueAndErrors(res, \"maxItems\", def.exactLength.value, def.exactLength.message, refs);\n  }\n  return res;\n}","map":{"version":3,"names":["ZodFirstPartyTypeKind","setResponseValueAndErrors","parseDef","parseArrayDef","def","refs","_def$type","res","type","_def","typeName","ZodAny","items","currentPath","minLength","value","message","maxLength","exactLength"],"sources":["/Users/mandylin/Desktop/WebCrack React 2/webcrack/node_modules/zod-to-json-schema/dist/esm/parsers/array.js"],"sourcesContent":["import { ZodFirstPartyTypeKind } from \"zod\";\nimport { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseArrayDef(def, refs) {\n    const res = {\n        type: \"array\",\n    };\n    if (def.type?._def?.typeName !== ZodFirstPartyTypeKind.ZodAny) {\n        res.items = parseDef(def.type._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"items\"],\n        });\n    }\n    if (def.minLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.minLength.value, def.minLength.message, refs);\n    }\n    if (def.maxLength) {\n        setResponseValueAndErrors(res, \"maxItems\", def.maxLength.value, def.maxLength.message, refs);\n    }\n    if (def.exactLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.exactLength.value, def.exactLength.message, refs);\n        setResponseValueAndErrors(res, \"maxItems\", def.exactLength.value, def.exactLength.message, refs);\n    }\n    return res;\n}\n"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,KAAK;AAC3C,SAASC,yBAAyB,QAAQ,qBAAqB;AAC/D,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,OAAO,SAASC,aAAaA,CAACC,GAAG,EAAEC,IAAI,EAAE;EAAA,IAAAC,SAAA;EACrC,MAAMC,GAAG,GAAG;IACRC,IAAI,EAAE;EACV,CAAC;EACD,IAAI,EAAAF,SAAA,GAAAF,GAAG,CAACI,IAAI,cAAAF,SAAA,gBAAAA,SAAA,GAARA,SAAA,CAAUG,IAAI,cAAAH,SAAA,uBAAdA,SAAA,CAAgBI,QAAQ,MAAKV,qBAAqB,CAACW,MAAM,EAAE;IAC3DJ,GAAG,CAACK,KAAK,GAAGV,QAAQ,CAACE,GAAG,CAACI,IAAI,CAACC,IAAI,EAAE;MAChC,GAAGJ,IAAI;MACPQ,WAAW,EAAE,CAAC,GAAGR,IAAI,CAACQ,WAAW,EAAE,OAAO;IAC9C,CAAC,CAAC;EACN;EACA,IAAIT,GAAG,CAACU,SAAS,EAAE;IACfb,yBAAyB,CAACM,GAAG,EAAE,UAAU,EAAEH,GAAG,CAACU,SAAS,CAACC,KAAK,EAAEX,GAAG,CAACU,SAAS,CAACE,OAAO,EAAEX,IAAI,CAAC;EAChG;EACA,IAAID,GAAG,CAACa,SAAS,EAAE;IACfhB,yBAAyB,CAACM,GAAG,EAAE,UAAU,EAAEH,GAAG,CAACa,SAAS,CAACF,KAAK,EAAEX,GAAG,CAACa,SAAS,CAACD,OAAO,EAAEX,IAAI,CAAC;EAChG;EACA,IAAID,GAAG,CAACc,WAAW,EAAE;IACjBjB,yBAAyB,CAACM,GAAG,EAAE,UAAU,EAAEH,GAAG,CAACc,WAAW,CAACH,KAAK,EAAEX,GAAG,CAACc,WAAW,CAACF,OAAO,EAAEX,IAAI,CAAC;IAChGJ,yBAAyB,CAACM,GAAG,EAAE,UAAU,EAAEH,GAAG,CAACc,WAAW,CAACH,KAAK,EAAEX,GAAG,CAACc,WAAW,CAACF,OAAO,EAAEX,IAAI,CAAC;EACpG;EACA,OAAOE,GAAG;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}