{"ast":null,"code":"import { ZodFirstPartyTypeKind } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nimport { parseStringDef } from \"./string.js\";\nexport function parseRecordDef(def, refs) {\n  if (refs.target === \"openApi3\" && def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n    return {\n      type: \"object\",\n      required: def.keyType._def.values,\n      properties: def.keyType._def.values.reduce((acc, key) => ({\n        ...acc,\n        [key]: parseDef(def.valueType._def, {\n          ...refs,\n          currentPath: [...refs.currentPath, \"properties\", key]\n        }) ?? {}\n      }), {}),\n      additionalProperties: false\n    };\n  }\n  const schema = {\n    type: \"object\",\n    additionalProperties: parseDef(def.valueType._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, \"additionalProperties\"]\n    }) ?? {}\n  };\n  if (refs.target === \"openApi3\") {\n    return schema;\n  }\n  if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodString && def.keyType._def.checks?.length) {\n    const keyType = Object.entries(parseStringDef(def.keyType._def, refs)).reduce((acc, [key, value]) => key === \"type\" ? acc : {\n      ...acc,\n      [key]: value\n    }, {});\n    return {\n      ...schema,\n      propertyNames: keyType\n    };\n  } else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n    return {\n      ...schema,\n      propertyNames: {\n        enum: def.keyType._def.values\n      }\n    };\n  }\n  return schema;\n}","map":{"version":3,"names":["ZodFirstPartyTypeKind","parseDef","parseStringDef","parseRecordDef","def","refs","target","keyType","_def","typeName","ZodEnum","type","required","values","properties","reduce","acc","key","valueType","currentPath","additionalProperties","schema","ZodString","checks","length","Object","entries","value","propertyNames","enum"],"sources":["/Users/mandylin/Desktop/WebCrack React/webcrack/node_modules/zod-to-json-schema/dist/esm/parsers/record.js"],"sourcesContent":["import { ZodFirstPartyTypeKind, } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nimport { parseStringDef } from \"./string.js\";\nexport function parseRecordDef(def, refs) {\n    if (refs.target === \"openApi3\" &&\n        def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            type: \"object\",\n            required: def.keyType._def.values,\n            properties: def.keyType._def.values.reduce((acc, key) => ({\n                ...acc,\n                [key]: parseDef(def.valueType._def, {\n                    ...refs,\n                    currentPath: [...refs.currentPath, \"properties\", key],\n                }) ?? {},\n            }), {}),\n            additionalProperties: false,\n        };\n    }\n    const schema = {\n        type: \"object\",\n        additionalProperties: parseDef(def.valueType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        }) ?? {},\n    };\n    if (refs.target === \"openApi3\") {\n        return schema;\n    }\n    if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.checks?.length) {\n        const keyType = Object.entries(parseStringDef(def.keyType._def, refs)).reduce((acc, [key, value]) => (key === \"type\" ? acc : { ...acc, [key]: value }), {});\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            ...schema,\n            propertyNames: {\n                enum: def.keyType._def.values,\n            },\n        };\n    }\n    return schema;\n}\n"],"mappings":"AAAA,SAASA,qBAAqB,QAAS,KAAK;AAC5C,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,cAAc,QAAQ,aAAa;AAC5C,OAAO,SAASC,cAAcA,CAACC,GAAG,EAAEC,IAAI,EAAE;EACtC,IAAIA,IAAI,CAACC,MAAM,KAAK,UAAU,IAC1BF,GAAG,CAACG,OAAO,EAAEC,IAAI,CAACC,QAAQ,KAAKT,qBAAqB,CAACU,OAAO,EAAE;IAC9D,OAAO;MACHC,IAAI,EAAE,QAAQ;MACdC,QAAQ,EAAER,GAAG,CAACG,OAAO,CAACC,IAAI,CAACK,MAAM;MACjCC,UAAU,EAAEV,GAAG,CAACG,OAAO,CAACC,IAAI,CAACK,MAAM,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,MAAM;QACtD,GAAGD,GAAG;QACN,CAACC,GAAG,GAAGhB,QAAQ,CAACG,GAAG,CAACc,SAAS,CAACV,IAAI,EAAE;UAChC,GAAGH,IAAI;UACPc,WAAW,EAAE,CAAC,GAAGd,IAAI,CAACc,WAAW,EAAE,YAAY,EAAEF,GAAG;QACxD,CAAC,CAAC,IAAI,CAAC;MACX,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACPG,oBAAoB,EAAE;IAC1B,CAAC;EACL;EACA,MAAMC,MAAM,GAAG;IACXV,IAAI,EAAE,QAAQ;IACdS,oBAAoB,EAAEnB,QAAQ,CAACG,GAAG,CAACc,SAAS,CAACV,IAAI,EAAE;MAC/C,GAAGH,IAAI;MACPc,WAAW,EAAE,CAAC,GAAGd,IAAI,CAACc,WAAW,EAAE,sBAAsB;IAC7D,CAAC,CAAC,IAAI,CAAC;EACX,CAAC;EACD,IAAId,IAAI,CAACC,MAAM,KAAK,UAAU,EAAE;IAC5B,OAAOe,MAAM;EACjB;EACA,IAAIjB,GAAG,CAACG,OAAO,EAAEC,IAAI,CAACC,QAAQ,KAAKT,qBAAqB,CAACsB,SAAS,IAC9DlB,GAAG,CAACG,OAAO,CAACC,IAAI,CAACe,MAAM,EAAEC,MAAM,EAAE;IACjC,MAAMjB,OAAO,GAAGkB,MAAM,CAACC,OAAO,CAACxB,cAAc,CAACE,GAAG,CAACG,OAAO,CAACC,IAAI,EAAEH,IAAI,CAAC,CAAC,CAACU,MAAM,CAAC,CAACC,GAAG,EAAE,CAACC,GAAG,EAAEU,KAAK,CAAC,KAAMV,GAAG,KAAK,MAAM,GAAGD,GAAG,GAAG;MAAE,GAAGA,GAAG;MAAE,CAACC,GAAG,GAAGU;IAAM,CAAE,EAAE,CAAC,CAAC,CAAC;IAC3J,OAAO;MACH,GAAGN,MAAM;MACTO,aAAa,EAAErB;IACnB,CAAC;EACL,CAAC,MACI,IAAIH,GAAG,CAACG,OAAO,EAAEC,IAAI,CAACC,QAAQ,KAAKT,qBAAqB,CAACU,OAAO,EAAE;IACnE,OAAO;MACH,GAAGW,MAAM;MACTO,aAAa,EAAE;QACXC,IAAI,EAAEzB,GAAG,CAACG,OAAO,CAACC,IAAI,CAACK;MAC3B;IACJ,CAAC;EACL;EACA,OAAOQ,MAAM;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}