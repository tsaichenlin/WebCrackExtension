{"ast":null,"code":"// utils / date\n\nimport { isObject } from './detection.js';\nconst getDateFormat = () => {\n  return {\n    dateStyle: 'medium',\n    timeStyle: 'long'\n  };\n};\nconst getTimeConvers = () => {\n  return {\n    second: 1000,\n    minute: 60,\n    hour: 60,\n    day: 24,\n    week: 7,\n    month: 4,\n    year: 12\n  };\n};\nconst isValidLocal = hl => {\n  try {\n    const locale = new Intl.Locale(hl);\n    return locale.language !== '';\n  } catch (err) {\n    return false;\n  }\n};\nexport const formatDateString = function () {\n  const input = arguments.length <= 0 ? undefined : arguments[0];\n  const lang = isValidLocal(arguments.length <= 1 ? undefined : arguments[1]) ? arguments.length <= 1 ? undefined : arguments[1] : 'en';\n  const dfmt = getDateFormat();\n  const opt = arguments.length >= 3 ? arguments.length <= 2 ? undefined : arguments[2] : arguments.length === 1 ? dfmt : isObject(arguments.length <= 1 ? undefined : arguments[1]) ? arguments.length <= 1 ? undefined : arguments[1] : dfmt;\n  const dtf = new Intl.DateTimeFormat(lang, opt);\n  return dtf.format(new Date(input));\n};\nexport const formatTimeAgo = function (input) {\n  let lang = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en';\n  let justnow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'just now';\n  const t = new Date(input);\n  let delta = Date.now() - t;\n  const tcv = getTimeConvers();\n  if (delta <= tcv.second) {\n    return justnow;\n  }\n  let unit = 'second';\n  for (const key in tcv) {\n    if (delta < tcv[key]) {\n      break;\n    } else {\n      unit = key;\n      delta /= tcv[key];\n    }\n  }\n  delta = Math.floor(delta);\n  const rel = new Intl.RelativeTimeFormat(lang);\n  return rel.format(-delta, unit);\n};","map":{"version":3,"names":["isObject","getDateFormat","dateStyle","timeStyle","getTimeConvers","second","minute","hour","day","week","month","year","isValidLocal","hl","locale","Intl","Locale","language","err","formatDateString","input","arguments","length","undefined","lang","dfmt","opt","dtf","DateTimeFormat","format","Date","formatTimeAgo","justnow","t","delta","now","tcv","unit","key","Math","floor","rel","RelativeTimeFormat"],"sources":["/Users/mandylin/Desktop/WebCrack React/webcrack/node_modules/bellajs/src/utils/date.js"],"sourcesContent":["// utils / date\n\nimport {\n  isObject\n} from './detection.js'\n\nconst getDateFormat = () => {\n  return {\n    dateStyle: 'medium',\n    timeStyle: 'long',\n  }\n}\n\nconst getTimeConvers = () => {\n  return {\n    second: 1000,\n    minute: 60,\n    hour: 60,\n    day: 24,\n    week: 7,\n    month: 4,\n    year: 12,\n  }\n}\n\nconst isValidLocal = (hl) => {\n  try {\n    const locale = new Intl.Locale(hl)\n    return locale.language !== ''\n  } catch (err) {\n    return false\n  }\n}\n\nexport const formatDateString = (...args) => {\n  const input = args[0]\n  const lang = isValidLocal(args[1]) ? args[1] : 'en'\n  const dfmt = getDateFormat()\n  const opt = args.length >= 3\n    ? args[2]\n    : args.length === 1\n      ? dfmt\n      : isObject(args[1])\n        ? args[1]\n        : dfmt\n  const dtf = new Intl.DateTimeFormat(lang, opt)\n  return dtf.format(new Date(input))\n}\n\nexport const formatTimeAgo = (input, lang = 'en', justnow = 'just now') => {\n  const t = new Date(input)\n  let delta = Date.now() - t\n  const tcv = getTimeConvers()\n  if (delta <= tcv.second) {\n    return justnow\n  }\n  let unit = 'second'\n  for (const key in tcv) {\n    if (delta < tcv[key]) {\n      break\n    } else {\n      unit = key\n      delta /= tcv[key]\n    }\n  }\n  delta = Math.floor(delta)\n  const rel = new Intl.RelativeTimeFormat(lang)\n  return rel.format(-delta, unit)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}