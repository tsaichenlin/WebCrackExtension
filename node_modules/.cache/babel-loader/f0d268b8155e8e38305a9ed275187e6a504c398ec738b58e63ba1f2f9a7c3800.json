{"ast":null,"code":"// main.js\n\nimport { isString } from 'bellajs';\nimport retrieve from './utils/retrieve.js';\nimport parseFromHtml from './utils/parseFromHtml.js';\nimport { isValid as isValidUrl } from './utils/linker.js';\nexport const extract = async (input, parserOptions = {}, fetchOptions = {}) => {\n  if (!isString(input)) {\n    throw new Error('Input must be a string');\n  }\n  if (!isValidUrl(input)) {\n    return parseFromHtml(input, null, parserOptions || {});\n  }\n  const html = await retrieve(input, fetchOptions);\n  if (!html) {\n    return null;\n  }\n  return parseFromHtml(html, input, parserOptions || {});\n};\nexport const extractFromHtml = async (html, url, parserOptions = {}) => {\n  return parseFromHtml(html, url, parserOptions);\n};\nexport { addTransformations, removeTransformations } from './utils/transformation.js';\nexport { setSanitizeHtmlOptions, getSanitizeHtmlOptions } from './config.js';","map":{"version":3,"names":["isString","retrieve","parseFromHtml","isValid","isValidUrl","extract","input","parserOptions","fetchOptions","Error","html","extractFromHtml","url","addTransformations","removeTransformations","setSanitizeHtmlOptions","getSanitizeHtmlOptions"],"sources":["/Users/mandylin/Desktop/WebCrack React/webcrack/node_modules/@extractus/article-extractor/src/main.js"],"sourcesContent":["// main.js\n\nimport {\n  isString\n} from 'bellajs'\n\nimport retrieve from './utils/retrieve.js'\nimport parseFromHtml from './utils/parseFromHtml.js'\nimport { isValid as isValidUrl } from './utils/linker.js'\n\nexport const extract = async (input, parserOptions = {}, fetchOptions = {}) => {\n  if (!isString(input)) {\n    throw new Error('Input must be a string')\n  }\n\n  if (!isValidUrl(input)) {\n    return parseFromHtml(input, null, parserOptions || {})\n  }\n  const html = await retrieve(input, fetchOptions)\n  if (!html) {\n    return null\n  }\n\n  return parseFromHtml(html, input, parserOptions || {})\n}\n\nexport const extractFromHtml = async (html, url, parserOptions = {}) => {\n  return parseFromHtml(html, url, parserOptions)\n}\n\nexport { addTransformations, removeTransformations } from './utils/transformation.js'\nexport { setSanitizeHtmlOptions, getSanitizeHtmlOptions } from './config.js'\n"],"mappings":"AAAA;;AAEA,SACEA,QAAQ,QACH,SAAS;AAEhB,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,aAAa,MAAM,0BAA0B;AACpD,SAASC,OAAO,IAAIC,UAAU,QAAQ,mBAAmB;AAEzD,OAAO,MAAMC,OAAO,GAAG,MAAAA,CAAOC,KAAK,EAAEC,aAAa,GAAG,CAAC,CAAC,EAAEC,YAAY,GAAG,CAAC,CAAC,KAAK;EAC7E,IAAI,CAACR,QAAQ,CAACM,KAAK,CAAC,EAAE;IACpB,MAAM,IAAIG,KAAK,CAAC,wBAAwB,CAAC;EAC3C;EAEA,IAAI,CAACL,UAAU,CAACE,KAAK,CAAC,EAAE;IACtB,OAAOJ,aAAa,CAACI,KAAK,EAAE,IAAI,EAAEC,aAAa,IAAI,CAAC,CAAC,CAAC;EACxD;EACA,MAAMG,IAAI,GAAG,MAAMT,QAAQ,CAACK,KAAK,EAAEE,YAAY,CAAC;EAChD,IAAI,CAACE,IAAI,EAAE;IACT,OAAO,IAAI;EACb;EAEA,OAAOR,aAAa,CAACQ,IAAI,EAAEJ,KAAK,EAAEC,aAAa,IAAI,CAAC,CAAC,CAAC;AACxD,CAAC;AAED,OAAO,MAAMI,eAAe,GAAG,MAAAA,CAAOD,IAAI,EAAEE,GAAG,EAAEL,aAAa,GAAG,CAAC,CAAC,KAAK;EACtE,OAAOL,aAAa,CAACQ,IAAI,EAAEE,GAAG,EAAEL,aAAa,CAAC;AAChD,CAAC;AAED,SAASM,kBAAkB,EAAEC,qBAAqB,QAAQ,2BAA2B;AACrF,SAASC,sBAAsB,EAAEC,sBAAsB,QAAQ,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}