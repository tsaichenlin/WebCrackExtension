{"ast":null,"code":"import { ZodFirstPartyTypeKind } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nimport { parseStringDef } from \"./string.js\";\nexport function parseRecordDef(def, refs) {\n  var _def$keyType, _parseDef2, _def$keyType2, _def$keyType$_def$che, _def$keyType3;\n  if (refs.target === \"openApi3\" && ((_def$keyType = def.keyType) === null || _def$keyType === void 0 ? void 0 : _def$keyType._def.typeName) === ZodFirstPartyTypeKind.ZodEnum) {\n    return {\n      type: \"object\",\n      required: def.keyType._def.values,\n      properties: def.keyType._def.values.reduce((acc, key) => {\n        var _parseDef;\n        return {\n          ...acc,\n          [key]: (_parseDef = parseDef(def.valueType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"properties\", key]\n          })) !== null && _parseDef !== void 0 ? _parseDef : {}\n        };\n      }, {}),\n      additionalProperties: false\n    };\n  }\n  const schema = {\n    type: \"object\",\n    additionalProperties: (_parseDef2 = parseDef(def.valueType._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, \"additionalProperties\"]\n    })) !== null && _parseDef2 !== void 0 ? _parseDef2 : {}\n  };\n  if (refs.target === \"openApi3\") {\n    return schema;\n  }\n  if (((_def$keyType2 = def.keyType) === null || _def$keyType2 === void 0 ? void 0 : _def$keyType2._def.typeName) === ZodFirstPartyTypeKind.ZodString && (_def$keyType$_def$che = def.keyType._def.checks) !== null && _def$keyType$_def$che !== void 0 && _def$keyType$_def$che.length) {\n    const keyType = Object.entries(parseStringDef(def.keyType._def, refs)).reduce((acc, _ref) => {\n      let [key, value] = _ref;\n      return key === \"type\" ? acc : {\n        ...acc,\n        [key]: value\n      };\n    }, {});\n    return {\n      ...schema,\n      propertyNames: keyType\n    };\n  } else if (((_def$keyType3 = def.keyType) === null || _def$keyType3 === void 0 ? void 0 : _def$keyType3._def.typeName) === ZodFirstPartyTypeKind.ZodEnum) {\n    return {\n      ...schema,\n      propertyNames: {\n        enum: def.keyType._def.values\n      }\n    };\n  }\n  return schema;\n}","map":{"version":3,"names":["ZodFirstPartyTypeKind","parseDef","parseStringDef","parseRecordDef","def","refs","_def$keyType","_parseDef2","_def$keyType2","_def$keyType$_def$che","_def$keyType3","target","keyType","_def","typeName","ZodEnum","type","required","values","properties","reduce","acc","key","_parseDef","valueType","currentPath","additionalProperties","schema","ZodString","checks","length","Object","entries","_ref","value","propertyNames","enum"],"sources":["/Users/mandylin/Desktop/WebCrack React 2/webcrack/node_modules/zod-to-json-schema/dist/esm/parsers/record.js"],"sourcesContent":["import { ZodFirstPartyTypeKind, } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nimport { parseStringDef } from \"./string.js\";\nexport function parseRecordDef(def, refs) {\n    if (refs.target === \"openApi3\" &&\n        def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            type: \"object\",\n            required: def.keyType._def.values,\n            properties: def.keyType._def.values.reduce((acc, key) => ({\n                ...acc,\n                [key]: parseDef(def.valueType._def, {\n                    ...refs,\n                    currentPath: [...refs.currentPath, \"properties\", key],\n                }) ?? {},\n            }), {}),\n            additionalProperties: false,\n        };\n    }\n    const schema = {\n        type: \"object\",\n        additionalProperties: parseDef(def.valueType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        }) ?? {},\n    };\n    if (refs.target === \"openApi3\") {\n        return schema;\n    }\n    if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.checks?.length) {\n        const keyType = Object.entries(parseStringDef(def.keyType._def, refs)).reduce((acc, [key, value]) => (key === \"type\" ? acc : { ...acc, [key]: value }), {});\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            ...schema,\n            propertyNames: {\n                enum: def.keyType._def.values,\n            },\n        };\n    }\n    return schema;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}