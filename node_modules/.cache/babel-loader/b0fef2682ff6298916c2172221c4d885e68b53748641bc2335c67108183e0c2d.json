{"ast":null,"code":"import { encodePointer } from \"./pointer.js\";\nexport const schemaKeyword = {\n  additionalItems: true,\n  unevaluatedItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  unevaluatedProperties: true,\n  propertyNames: true,\n  not: true,\n  if: true,\n  then: true,\n  else: true\n};\nexport const schemaArrayKeyword = {\n  prefixItems: true,\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\nexport const schemaMapKeyword = {\n  $defs: true,\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependentSchemas: true\n};\nexport const ignoredKeyword = {\n  id: true,\n  $id: true,\n  $ref: true,\n  $schema: true,\n  $anchor: true,\n  $vocabulary: true,\n  $comment: true,\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  type: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n/**\n * Default base URI for schemas without an $id.\n * https://json-schema.org/draft/2019-09/json-schema-core.html#initial-base\n * https://tools.ietf.org/html/rfc3986#section-5.1\n */\nexport let initialBaseURI =\n// @ts-ignore\ntypeof self !== \"undefined\" && self.location && self.location.origin !== \"null\" ?\n//@ts-ignore\n/* #__PURE__ */\nnew URL(self.location.origin + self.location.pathname + location.search) : /* #__PURE__ */new URL(\"https://github.com/cfworker\");\nexport function dereference(schema) {\n  let lookup = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Object.create(null);\n  let baseURI = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : initialBaseURI;\n  let basePointer = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n  if (schema && typeof schema === \"object\" && !Array.isArray(schema)) {\n    const id = schema.$id || schema.id;\n    if (id) {\n      const url = new URL(id, baseURI.href);\n      if (url.hash.length > 1) {\n        lookup[url.href] = schema;\n      } else {\n        url.hash = \"\"; // normalize hash https://url.spec.whatwg.org/#dom-url-hash\n        if (basePointer === \"\") {\n          baseURI = url;\n        } else {\n          dereference(schema, lookup, baseURI);\n        }\n      }\n    }\n  } else if (schema !== true && schema !== false) {\n    return lookup;\n  }\n  // compute the schema's URI and add it to the mapping.\n  const schemaURI = baseURI.href + (basePointer ? \"#\" + basePointer : \"\");\n  if (lookup[schemaURI] !== undefined) {\n    throw new Error(\"Duplicate schema URI \\\"\".concat(schemaURI, \"\\\".\"));\n  }\n  lookup[schemaURI] = schema;\n  // exit early if this is a boolean schema.\n  if (schema === true || schema === false) {\n    return lookup;\n  }\n  // set the schema's absolute URI.\n  if (schema.__absolute_uri__ === undefined) {\n    Object.defineProperty(schema, \"__absolute_uri__\", {\n      enumerable: false,\n      value: schemaURI\n    });\n  }\n  // if a $ref is found, resolve it's absolute URI.\n  if (schema.$ref && schema.__absolute_ref__ === undefined) {\n    const url = new URL(schema.$ref, baseURI.href);\n    url.hash = url.hash; // normalize hash https://url.spec.whatwg.org/#dom-url-hash\n    Object.defineProperty(schema, \"__absolute_ref__\", {\n      enumerable: false,\n      value: url.href\n    });\n  }\n  // if a $recursiveRef is found, resolve it's absolute URI.\n  if (schema.$recursiveRef && schema.__absolute_recursive_ref__ === undefined) {\n    const url = new URL(schema.$recursiveRef, baseURI.href);\n    url.hash = url.hash; // normalize hash https://url.spec.whatwg.org/#dom-url-hash\n    Object.defineProperty(schema, \"__absolute_recursive_ref__\", {\n      enumerable: false,\n      value: url.href\n    });\n  }\n  // if an $anchor is found, compute it's URI and add it to the mapping.\n  if (schema.$anchor) {\n    const url = new URL(\"#\" + schema.$anchor, baseURI.href);\n    lookup[url.href] = schema;\n  }\n  // process subschemas.\n  for (let key in schema) {\n    if (ignoredKeyword[key]) {\n      continue;\n    }\n    const keyBase = \"\".concat(basePointer, \"/\").concat(encodePointer(key));\n    const subSchema = schema[key];\n    if (Array.isArray(subSchema)) {\n      if (schemaArrayKeyword[key]) {\n        const length = subSchema.length;\n        for (let i = 0; i < length; i++) {\n          dereference(subSchema[i], lookup, baseURI, \"\".concat(keyBase, \"/\").concat(i));\n        }\n      }\n    } else if (schemaMapKeyword[key]) {\n      for (let subKey in subSchema) {\n        dereference(subSchema[subKey], lookup, baseURI, \"\".concat(keyBase, \"/\").concat(encodePointer(subKey)));\n      }\n    } else {\n      dereference(subSchema, lookup, baseURI, keyBase);\n    }\n  }\n  return lookup;\n}\n// schema identification examples\n// https://json-schema.org/draft/2019-09/json-schema-core.html#rfc.appendix.A\n// $ref delegation\n// https://github.com/json-schema-org/json-schema-spec/issues/514\n// output format\n// https://json-schema.org/draft/2019-09/json-schema-core.html#output\n// JSON pointer\n// https://tools.ietf.org/html/rfc6901\n// JSON relative pointer\n// https://tools.ietf.org/html/draft-handrews-relative-json-pointer-01","map":{"version":3,"names":["encodePointer","schemaKeyword","additionalItems","unevaluatedItems","items","contains","additionalProperties","unevaluatedProperties","propertyNames","not","if","then","else","schemaArrayKeyword","prefixItems","allOf","anyOf","oneOf","schemaMapKeyword","$defs","definitions","properties","patternProperties","dependentSchemas","ignoredKeyword","id","$id","$ref","$schema","$anchor","$vocabulary","$comment","default","enum","const","required","type","maximum","minimum","exclusiveMaximum","exclusiveMinimum","multipleOf","maxLength","minLength","pattern","format","maxItems","minItems","uniqueItems","maxProperties","minProperties","initialBaseURI","self","location","origin","URL","pathname","search","dereference","schema","lookup","arguments","length","undefined","Object","create","baseURI","basePointer","Array","isArray","url","href","hash","schemaURI","Error","concat","__absolute_uri__","defineProperty","enumerable","value","__absolute_ref__","$recursiveRef","__absolute_recursive_ref__","key","keyBase","subSchema","i","subKey"],"sources":["/Users/mandylin/Desktop/WebCrack React/webcrack/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/dereference.js"],"sourcesContent":["import { encodePointer } from \"./pointer.js\";\nexport const schemaKeyword = {\n    additionalItems: true,\n    unevaluatedItems: true,\n    items: true,\n    contains: true,\n    additionalProperties: true,\n    unevaluatedProperties: true,\n    propertyNames: true,\n    not: true,\n    if: true,\n    then: true,\n    else: true,\n};\nexport const schemaArrayKeyword = {\n    prefixItems: true,\n    items: true,\n    allOf: true,\n    anyOf: true,\n    oneOf: true,\n};\nexport const schemaMapKeyword = {\n    $defs: true,\n    definitions: true,\n    properties: true,\n    patternProperties: true,\n    dependentSchemas: true,\n};\nexport const ignoredKeyword = {\n    id: true,\n    $id: true,\n    $ref: true,\n    $schema: true,\n    $anchor: true,\n    $vocabulary: true,\n    $comment: true,\n    default: true,\n    enum: true,\n    const: true,\n    required: true,\n    type: true,\n    maximum: true,\n    minimum: true,\n    exclusiveMaximum: true,\n    exclusiveMinimum: true,\n    multipleOf: true,\n    maxLength: true,\n    minLength: true,\n    pattern: true,\n    format: true,\n    maxItems: true,\n    minItems: true,\n    uniqueItems: true,\n    maxProperties: true,\n    minProperties: true,\n};\n/**\n * Default base URI for schemas without an $id.\n * https://json-schema.org/draft/2019-09/json-schema-core.html#initial-base\n * https://tools.ietf.org/html/rfc3986#section-5.1\n */\nexport let initialBaseURI = \n// @ts-ignore\ntypeof self !== \"undefined\" &&\n    self.location &&\n    self.location.origin !== \"null\"\n    ? //@ts-ignore\n        /* #__PURE__ */ new URL(self.location.origin + self.location.pathname + location.search)\n    : /* #__PURE__ */ new URL(\"https://github.com/cfworker\");\nexport function dereference(schema, lookup = Object.create(null), baseURI = initialBaseURI, basePointer = \"\") {\n    if (schema && typeof schema === \"object\" && !Array.isArray(schema)) {\n        const id = schema.$id || schema.id;\n        if (id) {\n            const url = new URL(id, baseURI.href);\n            if (url.hash.length > 1) {\n                lookup[url.href] = schema;\n            }\n            else {\n                url.hash = \"\"; // normalize hash https://url.spec.whatwg.org/#dom-url-hash\n                if (basePointer === \"\") {\n                    baseURI = url;\n                }\n                else {\n                    dereference(schema, lookup, baseURI);\n                }\n            }\n        }\n    }\n    else if (schema !== true && schema !== false) {\n        return lookup;\n    }\n    // compute the schema's URI and add it to the mapping.\n    const schemaURI = baseURI.href + (basePointer ? \"#\" + basePointer : \"\");\n    if (lookup[schemaURI] !== undefined) {\n        throw new Error(`Duplicate schema URI \"${schemaURI}\".`);\n    }\n    lookup[schemaURI] = schema;\n    // exit early if this is a boolean schema.\n    if (schema === true || schema === false) {\n        return lookup;\n    }\n    // set the schema's absolute URI.\n    if (schema.__absolute_uri__ === undefined) {\n        Object.defineProperty(schema, \"__absolute_uri__\", {\n            enumerable: false,\n            value: schemaURI,\n        });\n    }\n    // if a $ref is found, resolve it's absolute URI.\n    if (schema.$ref && schema.__absolute_ref__ === undefined) {\n        const url = new URL(schema.$ref, baseURI.href);\n        url.hash = url.hash; // normalize hash https://url.spec.whatwg.org/#dom-url-hash\n        Object.defineProperty(schema, \"__absolute_ref__\", {\n            enumerable: false,\n            value: url.href,\n        });\n    }\n    // if a $recursiveRef is found, resolve it's absolute URI.\n    if (schema.$recursiveRef && schema.__absolute_recursive_ref__ === undefined) {\n        const url = new URL(schema.$recursiveRef, baseURI.href);\n        url.hash = url.hash; // normalize hash https://url.spec.whatwg.org/#dom-url-hash\n        Object.defineProperty(schema, \"__absolute_recursive_ref__\", {\n            enumerable: false,\n            value: url.href,\n        });\n    }\n    // if an $anchor is found, compute it's URI and add it to the mapping.\n    if (schema.$anchor) {\n        const url = new URL(\"#\" + schema.$anchor, baseURI.href);\n        lookup[url.href] = schema;\n    }\n    // process subschemas.\n    for (let key in schema) {\n        if (ignoredKeyword[key]) {\n            continue;\n        }\n        const keyBase = `${basePointer}/${encodePointer(key)}`;\n        const subSchema = schema[key];\n        if (Array.isArray(subSchema)) {\n            if (schemaArrayKeyword[key]) {\n                const length = subSchema.length;\n                for (let i = 0; i < length; i++) {\n                    dereference(subSchema[i], lookup, baseURI, `${keyBase}/${i}`);\n                }\n            }\n        }\n        else if (schemaMapKeyword[key]) {\n            for (let subKey in subSchema) {\n                dereference(subSchema[subKey], lookup, baseURI, `${keyBase}/${encodePointer(subKey)}`);\n            }\n        }\n        else {\n            dereference(subSchema, lookup, baseURI, keyBase);\n        }\n    }\n    return lookup;\n}\n// schema identification examples\n// https://json-schema.org/draft/2019-09/json-schema-core.html#rfc.appendix.A\n// $ref delegation\n// https://github.com/json-schema-org/json-schema-spec/issues/514\n// output format\n// https://json-schema.org/draft/2019-09/json-schema-core.html#output\n// JSON pointer\n// https://tools.ietf.org/html/rfc6901\n// JSON relative pointer\n// https://tools.ietf.org/html/draft-handrews-relative-json-pointer-01\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}